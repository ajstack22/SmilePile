/Users/adamstack/SmilePile/android/app/build.gradle.kts:14: Warning: Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details. [OldTargetApi]
        targetSdk = 34
        ~~~~~~~~~~~~~~

   Explanation for issues of type "OldTargetApi":
   When your application runs on a version of Android that is more recent than
   your targetSdkVersion specifies that it has been tested with, various
   compatibility modes kick in. This ensures that your application continues
   to work, but it may look out of place. For example, if the targetSdkVersion
   is less than 14, your app may get an option button in the UI.

   To fix this issue, set the targetSdkVersion to the highest available value.
   Then test your app to make sure everything works correctly. You may want to
   consult the compatibility notes to see what changes apply to each version
   you are adding support for:
   https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
   as well as follow this guide:
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

/Users/adamstack/SmilePile/android/app/build.gradle.kts:44: Warning: A newer version of androidx.core:core-ktx than 1.12.0 is available: 1.17.0 [GradleDependency]
    implementation("androidx.core:core-ktx:1.12.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:45: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.1 [GradleDependency]
    implementation("androidx.appcompat:appcompat:1.6.1")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:46: Warning: A newer version of com.google.android.material:material than 1.10.0 is available: 1.13.0 [GradleDependency]
    implementation("com.google.android.material:material:1.10.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:47: Warning: A newer version of androidx.activity:activity-ktx than 1.8.1 is available: 1.11.0 [GradleDependency]
    implementation("androidx.activity:activity-ktx:1.8.1")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:48: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:49: Warning: A newer version of androidx.viewpager2:viewpager2 than 1.0.0 is available: 1.1.0 [GradleDependency]
    implementation("androidx.viewpager2:viewpager2:1.0.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:51: Warning: A newer version of androidx.recyclerview:recyclerview than 1.3.0 is available: 1.4.0 [GradleDependency]
    implementation("androidx.recyclerview:recyclerview:1.3.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:54: Warning: A newer version of org.jetbrains.kotlinx:kotlinx-coroutines-android than 1.7.3 is available: 1.9.0 [GradleDependency]
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:55: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.7.0 is available: 2.9.4 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:58: Warning: A newer version of androidx.core:core than 1.12.0 is available: 1.17.0 [GradleDependency]
    implementation("androidx.core:core:1.12.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:62: Warning: A newer version of androidx.test:core than 1.5.0 is available: 1.7.0 [GradleDependency]
    testImplementation("androidx.test:core:1.5.0")
                        ~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:63: Warning: A newer version of androidx.test.ext:junit than 1.1.5 is available: 1.3.0 [GradleDependency]
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:64: Warning: A newer version of androidx.test.espresso:espresso-core than 3.5.1 is available: 3.7.0 [GradleDependency]
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:65: Warning: A newer version of androidx.test.espresso:espresso-contrib than 3.5.1 is available: 3.7.0 [GradleDependency]
    androidTestImplementation("androidx.test.espresso:espresso-contrib:3.5.1")
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:66: Warning: A newer version of androidx.fragment:fragment-testing than 1.6.2 is available: 1.8.9 [GradleDependency]
    androidTestImplementation("androidx.fragment:fragment-testing:1.6.2")
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/build.gradle.kts:67: Warning: A newer version of androidx.test.uiautomator:uiautomator than 2.2.0 is available: 2.3.0 [GradleDependency]
    androidTestImplementation("androidx.test.uiautomator:uiautomator:2.2.0")
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/adamstack/SmilePile/android/app/src/main/java/com/smilepile/app/CategoryFragment.kt:111: Warning: It will always be more efficient to use more specific change events if you can. Rely on notifyDataSetChanged as a last resort. [NotifyDataSetChanged]
        view?.findViewById<RecyclerView>(R.id.categoryRecyclerView)?.adapter?.notifyDataSetChanged()
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "NotifyDataSetChanged":
   The RecyclerView adapter's onNotifyDataSetChanged method does not specify
   what about the data set has changed, forcing any observers to assume that
   all existing items and structure may no longer be valid. `LayoutManager`s
   will be forced to fully rebind and relayout all visible views.

/Users/adamstack/SmilePile/android/app/src/main/res/layout/activity_main.xml:5: Warning: Possible overdraw: Root element paints background @color/black with a theme that also paints a background (inferred theme is @style/Theme_SmilePile_NoActionBar) [Overdraw]
    android:background="@color/black">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/src/main/res/layout/fragment_category.xml:5: Warning: Possible overdraw: Root element paints background @color/black with a theme that also paints a background (inferred theme is @style/Theme.SmilePile) [Overdraw]
    android:background="@color/black">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/src/main/res/layout/fragment_category_selection.xml:6: Warning: Possible overdraw: Root element paints background @color/black with a theme that also paints a background (inferred theme is @style/Theme.SmilePile) [Overdraw]
    android:background="@color/black"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/src/main/res/layout/fragment_photo.xml:5: Warning: Possible overdraw: Root element paints background @color/black with a theme that also paints a background (inferred theme is @style/Theme.SmilePile) [Overdraw]
    android:background="@color/black">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Overdraw":
   If you set a background drawable on a root view, then you should use a
   custom theme where the theme background is null. Otherwise, the theme
   background will be painted first, only to have your custom background
   completely cover it; this is called "overdraw".

   NOTE: This detector relies on figuring out which layouts are associated
   with which activities based on scanning the Java code, and it's currently
   doing that using an inexact pattern matching algorithm. Therefore, it can
   incorrectly conclude which activity the layout is associated with and then
   wrongly complain that a background-theme is hidden.

   If you want your custom background on multiple pages, then you should
   consider making a custom theme with your custom background and just using
   that theme instead of a root element background.

   Of course it's possible that your custom drawable is translucent and you
   want it to be mixed with the background. However, you will get better
   performance if you pre-mix the background with your drawable and use that
   resulting image or color as a custom theme background instead.

/Users/adamstack/SmilePile/android/app/src/main/res/values/colors.xml:3: Warning: The resource R.color.purple_200 appears to be unused [UnusedResources]
    <color name="purple_200">#FFBB86FC</color>
           ~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/src/main/res/values/colors.xml:5: Warning: The resource R.color.purple_700 appears to be unused [UnusedResources]
    <color name="purple_700">#FF3700B3</color>
           ~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/src/main/res/values/colors.xml:6: Warning: The resource R.color.teal_200 appears to be unused [UnusedResources]
    <color name="teal_200">#FF03DAC5</color>
           ~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/src/main/res/values/colors.xml:7: Warning: The resource R.color.teal_700 appears to be unused [UnusedResources]
    <color name="teal_700">#FF018786</color>
           ~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/src/main/res/drawable/test_image.xml:2: Warning: The resource R.drawable.test_image appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
/Users/adamstack/SmilePile/android/app/src/main/res/drawable/test_image2.xml:2: Warning: The resource R.drawable.test_image2 appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
/Users/adamstack/SmilePile/android/app/src/main/res/drawable/test_image3.xml:2: Warning: The resource R.drawable.test_image3 appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

/Users/adamstack/SmilePile/android/app/src/main/res/mipmap-hdpi/ic_launcher.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/adamstack/SmilePile/android/app/src/main/res/mipmap-mdpi/ic_launcher.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/adamstack/SmilePile/android/app/src/main/res/mipmap-xhdpi/ic_launcher.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/adamstack/SmilePile/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/adamstack/SmilePile/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/adamstack/SmilePile/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/adamstack/SmilePile/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/adamstack/SmilePile/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/adamstack/SmilePile/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/adamstack/SmilePile/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^

   Explanation for issues of type "MonochromeLauncherIcon":
   If android:roundIcon and android:icon are both in your manifest, you must
   either remove the reference to android:roundIcon if it is not needed; or,
   supply the monochrome icon in the drawable defined by the android:roundIcon
   and android:icon attribute.

   For example, if android:roundIcon and android:icon are both in the
   manifest, a launcher might choose to use android:roundIcon over
   android:icon to display the adaptive app icon. Therefore, your themed
   application iconwill not show if your monochrome attribute is not also
   specified in android:roundIcon.

/Users/adamstack/SmilePile/android/app/build.gradle.kts:58: Information: Add suffix -ktx to enable the Kotlin extensions for this library [KtxExtensionAvailable]
    implementation("androidx.core:core:1.12.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "KtxExtensionAvailable":
   Android KTX extensions augment some libraries with support for modern
   Kotlin language features like extension functions, extension properties,
   lambdas, named parameters, coroutines, and more.

   In Kotlin projects, use the KTX version of a library by replacing the
   dependency in your build.gradle file. For example, you can replace
   androidx.fragment:fragment with androidx.fragment:fragment-ktx.

   https://developer.android.com/kotlin/ktx

/Users/adamstack/SmilePile/android/app/src/main/java/com/smilepile/app/PhotoFragment.kt:94: Warning: onTouch lambda should call View#performClick when a click is detected [ClickableViewAccessibility]
        view.setOnTouchListener { _, event ->
                                ^

   Explanation for issues of type "ClickableViewAccessibility":
   If a View that overrides onTouchEvent or uses an OnTouchListener does not
   also implement performClick and call it when clicks are detected, the View
   may not handle accessibility actions properly. Logic handling the click
   actions should ideally be placed in View#performClick as some accessibility
   services invoke performClick when a click action should occur.

/Users/adamstack/SmilePile/android/app/src/main/res/layout/fragment_photo.xml:18: Warning: Hardcoded string "Back", should use @string resource [HardcodedText]
        android:text="Back"
        ~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/src/main/res/layout/item_category.xml:24: Warning: Hardcoded string "Category image", should use @string resource [HardcodedText]
            android:contentDescription="Category image"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/adamstack/SmilePile/android/app/src/main/res/layout/item_category.xml:33: Warning: Hardcoded string "Category Name", should use @string resource [HardcodedText]
            android:text="Category Name"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 43 warnings
