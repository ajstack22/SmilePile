# Atlas Build Evidence Template v2.0
# This YAML template provides a standardized format for capturing build evidence

evidence_metadata:
  id: "EVD-{YYYYMMDD}-{HHmm}-build-{sequence}"
  type: "build"
  version: "2.0"
  phase: "implementation"
  story_id: ""  # e.g., "S001"
  sprint_id: ""  # e.g., "SP-2024-10"
  created_at: ""  # ISO 8601 format
  created_by: "automated"
  tools_used: []  # e.g., ["maven", "docker", "sonarqube"]
  environment: ""  # dev|staging|production
  validation_status: "pending"  # pending|validated|rejected
  retention_policy: "6months"

build_info:
  build_id: ""  # e.g., "BLD-20241115-1030-main-342"
  trigger: ""  # commit|schedule|manual|release
  branch: ""  # e.g., "main", "feature/auth-fix"
  commit_sha: ""  # Full commit hash
  commit_message: ""
  author: ""
  build_duration: ""  # HH:MM:SS format
  build_agent: ""  # e.g., "jenkins-agent-03"
  build_number: 0
  previous_build_number: 0

environment:
  build_server: ""  # e.g., "jenkins.company.com"
  os_version: ""  # e.g., "Ubuntu 22.04"
  architecture: ""  # e.g., "x86_64"
  timezone: ""  # e.g., "UTC"
  workspace_path: ""

  build_tools:
    - name: ""  # e.g., "maven"
      version: ""  # e.g., "3.8.6"
      path: ""
    - name: ""  # e.g., "openjdk"
      version: ""  # e.g., "17.0.5"
      path: ""

  environment_variables:
    JAVA_HOME: ""
    MAVEN_OPTS: ""
    BUILD_ENV: ""

  dependencies_snapshot: ""  # Path to dependencies file

compilation:
  status: ""  # success|failure|warning
  compiler_warnings: 0
  compiler_errors: 0
  compilation_time: ""  # HH:MM:SS
  output_size: ""  # e.g., "45.2MB"

  by_module:
    - module_name: ""
      status: ""  # success|failure|warning
      warnings: 0
      errors: 0
      compilation_time: ""
      output_size: ""

  compiler_details:
    compiler_version: ""
    optimization_level: ""
    target_version: ""
    source_encoding: ""

testing:
  unit_tests:
    executed: 0
    passed: 0
    failed: 0
    skipped: 0
    duration: ""  # HH:MM:SS
    coverage: 0.0  # Percentage

    failures:
      - test_class: ""
        test_method: ""
        error_message: ""
        stack_trace: ""

    coverage_by_package:
      - package: ""
        line_coverage: 0.0
        branch_coverage: 0.0
        method_coverage: 0.0

  integration_tests:
    executed: 0
    passed: 0
    failed: 0
    skipped: 0
    duration: ""  # HH:MM:SS

    failures:
      - test_class: ""
        test_method: ""
        error_message: ""
        stack_trace: ""

  test_reports:
    junit_xml: ""  # Path to JUnit XML report
    coverage_html: ""  # Path to coverage HTML report
    coverage_xml: ""  # Path to coverage XML report

static_analysis:
  sonarqube:
    quality_gate: ""  # passed|failed
    project_key: ""
    analysis_id: ""

    metrics:
      bugs: 0
      vulnerabilities: 0
      code_smells: 0
      technical_debt: ""  # e.g., "2h 15m"
      duplication: 0.0  # Percentage
      lines_of_code: 0
      complexity: 0
      maintainability_rating: ""  # A|B|C|D|E
      reliability_rating: ""  # A|B|C|D|E
      security_rating: ""  # A|B|C|D|E

    issues:
      blocker: 0
      critical: 0
      major: 0
      minor: 0
      info: 0

    detailed_issues:
      - severity: ""  # blocker|critical|major|minor|info
        type: ""  # bug|vulnerability|code_smell
        rule: ""
        message: ""
        file: ""
        line: 0
        debt: ""  # e.g., "5min"

  checkstyle:
    total_violations: 0
    error_violations: 0
    warning_violations: 0
    info_violations: 0

    violations_by_category:
      - category: ""  # e.g., "imports", "naming"
        count: 0
        severity: ""

  spotbugs:
    total_bugs: 0
    high_priority: 0
    medium_priority: 0
    low_priority: 0

    bug_categories:
      - category: ""  # e.g., "CORRECTNESS", "PERFORMANCE"
        count: 0
        priority: ""

security_scanning:
  dependency_check:
    total_dependencies: 0
    vulnerable_dependencies: 0

    vulnerabilities:
      critical: 0
      high: 0
      medium: 0
      low: 0

    detailed_vulnerabilities:
      - component: ""
        vulnerability: ""  # e.g., "CVE-2023-12345"
        severity: ""  # critical|high|medium|low
        description: ""
        fix_available: false
        fixed_version: ""

  container_scan:
    image_name: ""
    image_tag: ""
    scan_tool: ""  # e.g., "trivy", "clair"

    vulnerabilities: 0
    compliance_violations: 0

    by_severity:
      critical: 0
      high: 0
      medium: 0
      low: 0
      unknown: 0

    base_image_vulnerabilities: 0
    added_vulnerabilities: 0

  license_check:
    total_licenses: 0
    approved_licenses: 0
    unapproved_licenses: 0
    unknown_licenses: 0

    license_violations:
      - component: ""
        license: ""
        violation_type: ""  # copyleft|restricted|unknown
        action_required: ""

artifacts:
  - name: ""  # e.g., "user-service.jar"
    type: ""  # jar|war|docker|npm|wheel
    size: ""  # e.g., "34.5MB"
    checksum: ""  # e.g., "sha256:a1b2c3..."
    location: ""  # Full path or URL
    created_at: ""  # ISO 8601 format

  - name: ""  # Docker image example
    type: "docker"
    tag: ""  # e.g., "user-service:2.1.0-rc.12"
    size: ""  # e.g., "156MB"
    digest: ""  # sha256 digest
    registry: ""  # e.g., "registry.company.com"
    layers: 0
    created_at: ""

deployment_readiness:
  health_checks: ""  # passed|failed
  configuration_validation: ""  # passed|failed
  database_migrations: ""  # ready|pending|failed
  feature_flags: ""  # configured|missing
  secrets_validation: ""  # passed|failed

  readiness_checklist:
    - item: "Application starts successfully"
      status: ""  # passed|failed|skipped
      evidence: ""
    - item: "Database connectivity verified"
      status: ""
      evidence: ""
    - item: "External service dependencies verified"
      status: ""
      evidence: ""
    - item: "Monitoring endpoints responsive"
      status: ""
      evidence: ""

performance_metrics:
  build_performance:
    total_build_time: ""  # HH:MM:SS
    compilation_time: ""
    test_execution_time: ""
    packaging_time: ""
    analysis_time: ""

  resource_usage:
    peak_memory_usage: ""  # e.g., "2.1GB"
    average_cpu_usage: 0.0  # Percentage
    disk_space_used: ""  # e.g., "1.5GB"
    network_usage: ""  # e.g., "150MB"

  historical_comparison:
    previous_build_time: ""
    performance_delta: ""  # +5% slower, -10% faster
    trend: ""  # improving|declining|stable

notifications:
  sent_to: []  # e.g., ["team-slack", "build-email-list"]
  notification_time: ""  # ISO 8601 format
  status: ""  # success|failed|partial

  channels:
    - type: ""  # slack|email|webhook
      target: ""  # channel name, email address, URL
      status: ""  # sent|failed
      message_id: ""

rollback_information:
  rollback_available: false
  previous_successful_build: ""
  rollback_procedure: ""
  rollback_testing_required: false

  rollback_artifacts:
    - name: ""
      location: ""
      verified: false

evidence_files:
  - name: "build-log-full.txt"
    path: ""
    size: ""
    checksum: ""
    description: "Complete build execution log"

  - name: "test-results.xml"
    path: ""
    size: ""
    checksum: ""
    description: "JUnit test results in XML format"

  - name: "sonarqube-report.json"
    path: ""
    size: ""
    checksum: ""
    description: "SonarQube analysis results"

  - name: "dependency-check-report.xml"
    path: ""
    size: ""
    checksum: ""
    description: "OWASP dependency check results"

  - name: "coverage-report/"
    path: ""
    size: ""
    checksum: ""
    description: "Test coverage HTML reports"

validation_rules:
  critical:
    - compilation_status == "success"
    - unit_test_failures == 0
    - security_critical_issues == 0

  blocking:
    - integration_test_failures == 0
    - quality_gate == "passed"
    - artifacts_generated == true
    - deployment_readiness == "passed"

  warning:
    - test_coverage >= 80
    - build_duration <= "00:05:00"
    - static_analysis_violations < 20
    - performance_regression < 10

quality_gates:
  minimum_requirements:
    test_coverage: 80.0
    quality_gate: "passed"
    security_violations: 0
    build_success: true

  performance_requirements:
    max_build_time: "00:05:00"
    max_memory_usage: "4GB"
    max_artifact_size: "100MB"

  compliance_requirements:
    license_compliance: true
    security_scan_passed: true
    code_standards_met: true

# Usage Instructions:
# 1. Replace placeholder values (empty strings, zeros) with actual data
# 2. Remove unused sections if they don't apply to your build type
# 3. Add custom fields as needed for your specific requirements
# 4. Ensure all paths and URLs are accessible for evidence verification
# 5. Validate the YAML structure before committing to evidence store