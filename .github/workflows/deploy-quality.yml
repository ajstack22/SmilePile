name: Deploy to Quality

on:
  push:
    branches:
      - develop
      - 'release/*'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to deploy'
        required: true
        default: 'both'
        type: choice
        options:
          - android
          - ios
          - both

env:
  ENVIRONMENT: quality

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Android security checks
        if: contains(github.event.inputs.platform, 'android') || contains(github.event.inputs.platform, 'both') || github.event_name == 'push'
        run: |
          cd android
          ./gradlew dependencyCheckAnalyze

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: android/build/reports/

  test-android:
    name: Test Android
    runs-on: ubuntu-latest
    needs: security-scan
    if: contains(github.event.inputs.platform, 'android') || contains(github.event.inputs.platform, 'both') || github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Run unit tests
        run: |
          cd android
          ./gradlew testDebugUnitTest

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: |
            cd android
            ./gradlew connectedDebugAndroidTest

      - name: Generate JaCoCo coverage report
        run: |
          cd android
          ./gradlew jacocoCombinedTestReport

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: android-test-results
          path: |
            android/app/build/test-results/
            android/app/build/outputs/androidTest-results/

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: android-coverage
          path: android/app/build/reports/jacoco/

  test-ios:
    name: Test iOS
    runs-on: macos-latest
    needs: security-scan
    if: contains(github.event.inputs.platform, 'ios') || contains(github.event.inputs.platform, 'both') || github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install dependencies
        run: |
          cd ios
          if [ -f "Podfile" ]; then
            pod install
          fi

      - name: Run iOS tests
        run: |
          cd ios
          xcodebuild test \
            -workspace SmilePile.xcworkspace \
            -scheme SmilePile \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 14' \
            -resultBundlePath TestResults.xcresult

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ios-test-results
          path: ios/TestResults.xcresult

  deploy-android:
    name: Deploy Android to Quality
    runs-on: ubuntu-latest
    needs: test-android
    if: success() && (contains(github.event.inputs.platform, 'android') || contains(github.event.inputs.platform, 'both'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build release APK
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Upload to internal testing track
        run: |
          echo "Deploy to Google Play Console internal testing track"
          # Add deployment steps here when credentials are configured

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-quality-apk
          path: android/app/build/outputs/apk/release/*.apk

  deploy-ios:
    name: Deploy iOS to Quality
    runs-on: macos-latest
    needs: test-ios
    if: success() && (contains(github.event.inputs.platform, 'ios') || contains(github.event.inputs.platform, 'both'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build iOS app
        run: |
          cd ios
          xcodebuild archive \
            -workspace SmilePile.xcworkspace \
            -scheme SmilePile \
            -archivePath SmilePile.xcarchive \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO

      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive \
            -archivePath SmilePile.xcarchive \
            -exportPath export \
            -exportOptionsPlist ExportOptions.plist

      - name: Upload to TestFlight
        run: |
          echo "Deploy to TestFlight"
          # Add deployment steps here when credentials are configured

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-quality-ipa
          path: ios/export/*.ipa